// <auto-generated />
using System;
using AnimalShelter.Web;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnimalShelter.Web.Migrations
{
    [DbContext(typeof(DbContext))]
    partial class DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnimalShelter.Data.AnimalDataEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Age")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AnimalGenderId")
                        .HasColumnType("int");

                    b.Property<string>("AnimalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LocationLatitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LocationLongitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalGenderId");

                    b.HasIndex("AnimalTypeId");

                    b.HasIndex("BreedId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("AnimalShelter.Data.AnimalGenderDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimalGenders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Gender = "Female"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Data.AnimalTypeDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimalTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Dog"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Other"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Data.BreedDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("AnimalShelter.Data.BreedRescueTypeDataEntity", b =>
                {
                    b.Property<int>("BreedTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RescueTypeId")
                        .HasColumnType("int");

                    b.ToTable("RescueBreeds");
                });

            modelBuilder.Entity("AnimalShelter.Data.RescueTypeDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RescueTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Water"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Mountain"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Disaster"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Data.AnimalDataEntity", b =>
                {
                    b.HasOne("AnimalShelter.Data.AnimalGenderDataEntity", "AnimalGender")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalGenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimalShelter.Data.AnimalTypeDataEntity", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId");

                    b.HasOne("AnimalShelter.Data.BreedDataEntity", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
